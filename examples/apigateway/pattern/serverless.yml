service: pattern-example
frameworkVersion: '3'
plugins:
    - serverless-plugin-bind-deployment-id
    - serverless-plugin-log-retention
    - serverless-deployment-bucket
    - serverless-offline
package:
    patterns:
        - '!.git/**'
        - '!.github/**'
        - '!.circleci/**'
        - '!.serverless/**'
        - '!.idea/**'
        - '!.vscode/**'
        - '!infra/**'
        - '!node_modules/**'
        - '!.DS_Store'
        - '!Acai AWS Pattern Example.postman_collection.json'
        - '!README.md'
        - '!serverless.yml'
        - '!Pipfile'
        - '!Pipfile.lock'
        - '!package.json'
        - '!package-lock.json'
resources:
    - ${file(./infra/resources/apigateway.yml)}
provider:
    name: aws
    runtime: python3.9
    architecture: arm64
    versionFunctions: false
    endpointType: regional
    environment: ${file(./infra/envs/${param:env, 'local'}.yml):environment}
    stage: ${opt:stage, 'local'}
    region: ${opt:region, 'us-east-2'}
    stackName: ${self:provider.stackTags.name}
    apiName: ${self:provider.stackTags.name}
    deploymentBucket:
        name: ${self:provider.stackTags.name}-acai-aws-examples
    stackTags:
        name: ${opt:stage, 'local'}-${self:service}
        service: ${self:service}
        environment: ${opt:stage, 'local'}
        managed-by: serverless-framework
custom:
    logRetentionInDays: 1
    pythonRequirements:
        useDownloadCache: false
        useStaticCache: false
        usePipenv: true
        usePoetry: false
        dockerizePip: non-linux
        dockerImage: lambci/lambda:build-python3.9
        slim: true
        slimPatternsAppendDefaults: false
        slimPatterns:
            - '**/*.py[c|o]'
            - '**/__pycache__*'
    cors:
        origin: '*'
        allowCredentials: false
        headers:
            - Content-Type
            - Authorization
            - x-api-key
    serverless-offline:
        httpPort: 9000
        stage: local
        prefix: ${self:service}
        region: us-east-2
        noAuth: true
        noPrependStageInUrl: true
functions:
    v1-apigateway-handler:
        handler: api/v1/__router.route
        memorySize: 256
        timeout: 30
        events:
            - http:
                path: /v1
                method: ANY
                cors: ${self:custom.cors}
            - http:
                path: /v1/{proxy+}
                method: ANY
                cors: ${self:custom.cors}