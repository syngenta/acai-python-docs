service: dynamodb-example
frameworkVersion: '3'
plugins:
    - serverless-plugin-bind-deployment-id
    - serverless-plugin-log-retention
    - serverless-deployment-bucket
    - serverless-dynamodb
    - serverless-offline
package:
    exclude:
        - .*
        - .**/**
        - infra/**
        - README.md
        - serverless.yml
        - package.json
        - package-lock.json
provider:
    name: aws
    runtime: python3.9
    versionFunctions: false
    endpointType: regional
    stage: ${env:stage, 'local'}
    region: ${env:region, 'us-east-2'}
    stackName: ${self:provider.stackTags.name}
    apiName: ${self:provider.stackTags.name}
    deploymentBucket:
        name: ${self:provider.stackTags.name}-acai-aws-examples
    stackTags:
        name: ${self:provider.stage}-${self:service}
        service: ${self:service}
        environment: ${self:provider.stage}
        managed-by: serverless-framework
custom:
    logRetentionInDays: 1
    pythonRequirements:
        useDownloadCache: false
        useStaticCache: false
        usePipenv: true
        usePoetry: false
        dockerizePip: non-linux
        dockerImage: lambci/lambda:build-python3.9
        slim: true
        slimPatternsAppendDefaults: false
        slimPatterns:
            - '**/*.py[c|o]'
            - '**/__pycache__*'
    serverless-dynamodb:
        stages:
            - local
        start:
            port: 4001
            inMemory: true
            migrate: true
            seed: true
        seed:
            cache:
                sources:
                    -
                        table: ${self:provider.stackTags.name}-example
                        sources: [./infra/local/seed/test.json]
resources:
    - ${file(./infra/resources/dynamodb.yml)}
functions:
    v1-ddb-stream-handler:
        name: ${self:provider.stackTags.name}-v1-ddb-stream-handler
        handler: app/handler.stream
        description: example ddb handler
        memorySize: 256
        events:
            - stream:
                type: dynamodb
                arn:
                    Fn::GetAtt: [ExampleTable, StreamArn]
