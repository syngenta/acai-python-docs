service: sns-sqs-example
frameworkVersion: '3'
plugins:
    - serverless-plugin-bind-deployment-id
    - serverless-plugin-log-retention
    - serverless-deployment-bucket
    - serverless-python-requirements
    - serverless-offline
package:
    patterns:
        - '!.*'
        - '!.**/**'
        - '!infra/**'
        - '!node_modules/**'
        - '!Pipfile'
        - '!Pipfile.lock'
        - '!README.md'
        - '!serverless.yml'
        - '!package.json'
        - '!package-lock.json'
provider:
    name: aws
    runtime: python3.9
    architecture: arm64
    versionFunctions: false
    endpointType: regional
    stage: ${opt:stage, 'local'}
    region: ${opt:region, 'us-east-2'}
    stackName: ${self:provider.stackTags.name}
    apiName: ${self:provider.stackTags.name}
    deploymentBucket:
        name: ${self:provider.stackTags.name}-acai-aws-examples
    stackTags:
        name: ${opt:stage, 'local'}-${self:service}
        service: ${self:service}
        environment: ${opt:stage, 'local'}
        managed-by: serverless-framework
    iam:
        role:
            statements:
                - ${file(./infra/iamroles/sns.yml)}
                - ${file(./infra/iamroles/sqs.yml)}
resources:
    - ${file(./infra/resources/sns.yml)}
    - ${file(./infra/resources/sns-subscriptions.yml)}
    - ${file(./infra/resources/sqs.yml)}
    - ${file(./infra/resources/sqs-policy.yml)}
custom:
    logRetentionInDays: 1
    pythonRequirements:
        useDownloadCache: false
        useStaticCache: false
        usePipenv: true
        usePoetry: false
        dockerizePip: non-linux
        dockerImage: public.ecr.aws/sam/build-python3.9:latest
        slim: true
        slimPatternsAppendDefaults: true
        slimPatterns:
            - '**/*.py[c|o]'
            - '**/__pycache__*'
functions:
    v1-sns-handler:
        name: ${self:provider.stackTags.name}-v1-sns-handler
        handler: app/sns_handler.handle
        description: example sns handler
        memorySize: 256
        events:
           - sns:
                topicName: ${self:provider.stackTags.name}
                arn:
                    Fn::GetAtt: [ ExampleSNS, 'TopicArn' ]
    v1-sqs-handler:
        name: ${self:provider.stackTags.name}-v1-sqs-handler
        handler: app/sqs_handler.handle
        description: example sqs handler
        memorySize: 256
        events:
           - sqs:
                arn:
                    Fn::GetAtt: [ ExampleQueue, 'Arn' ]
